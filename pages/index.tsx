import { gql } from '@apollo/client';
import Head from 'next/head';
import ApolloClient from 'client';
import Product from 'components/Product';
import styles from 'styles/Home.module.css';
import ProductsClasses from 'styles/products.module.css';
import type { Products } from 'types';

const AllProductsQuery = gql`
  query Categories {
    category {
      name
      products {
        name
        id
        inStock
        gallery
        attributes {
          id
          name
          items {
            displayValue
            value
            id
          }
        }
        prices {
          currency {
            label
            symbol
          }
          amount
        }
      }
    }
  }
`;
interface HomePageProps {
  loading: boolean;
  data: { category: { products: Products } };
}
const Home: ({ loading, data }: HomePageProps) => JSX.Element = ({
  loading,
  data,
}: HomePageProps) => {
  if (loading) return <h1>loadinggg</h1>;
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className={styles.title}>Welcome to Swiftx store</h1>
        <div className={ProductsClasses.products}>
          {data?.category.products.map((pr) => (
            <Product product={pr} key={pr.id} />
          ))}
        </div>
      </main>
    </>
  );
};
export async function getStaticProps() {
  const query = await ApolloClient.query({ query: AllProductsQuery });
  return { props: query };
}
export default Home;
